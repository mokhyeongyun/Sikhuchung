<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sikhuchung.mapper.SikhuchungMapper">
    <!-- 공지사항 -->
    <sql id="noticeColumns">
          notice_number
        , user_id
        , notice_title
        , notice_content
        , TO_CHAR(notice_date, 'yyyy-MM-dd') notice_date
        , notice_hit
        , notice_update_id
        , notice_update_date
        , notice_delete
    </sql>
    
    <insert id="insertNotice" parameterType="NoticeDTO">
        INSERT INTO s_notice (
            notice_number
            ,user_id
            ,notice_title
            ,notice_content
            ,notice_date
            ,notice_hit
            ,notice_delete
        ) VALUES (
              sequ_notice_number.nextval
            , #{userId, jdbcType=VARCHAR}
            , #{noticeTitle, jdbcType=VARCHAR}
            , #{noticeContent, jdbcType=VARCHAR}
            , sysdate
            , 0
            , 'N'
        )
    </insert>

    <select id="selectNoticeDetail" parameterType="Long" resultType="NoticeDTO">
        SELECT
            <include refid="noticeColumns" />
        FROM
            s_notice
        WHERE
            notice_delete = 'N'
        AND
            notice_number = #{noticeNumber}
    </select>

    <update id="updateNotice" parameterType="NoticeDTO">
        UPDATE s_notice
        SET
              notice_update_date = sysdate
            , notice_title = #{noticeTitle}
            , notice_content = #{noticeContent}
            , user_id = #{userId}
        WHERE
            notice_number = #{noticeNumber}
    </update>

    <update id="deleteNotice" parameterType="Long">
        UPDATE s_notice
        SET
              notice_delete = 'Y'
        WHERE
            notice_number = #{noticeNumber}
    </update>

    <select id="selectNoticeList" parameterType="NoticeDTO" resultType="NoticeDTO">
        SELECT 
            notice_number
	        , user_id
	        , notice_title
	        , notice_content
	        , TO_CHAR(notice_date, 'yyyy-MM-dd') notice_date
	        , notice_hit
	        , notice_update_id
	        , notice_update_date
	        , notice_delete
            FROM (
                SELECT ROW_NUMBER() OVER (ORDER BY notice_number DESC, notice_date DESC) NUM
                    , A.*
                    FROM S_NOTICE A
                    <where> 
                    <if test="searchKeyword != null and searchKeyword != ''">
			            <choose>
			                <when test="searchType != null and searchType != ''">
			                    <choose>
			                        <when test="'title'.equals(searchType)">
			                            AND notice_title LIKE '%' || #{searchKeyword} || '%'
			                        </when>
			                        <when test="'content'.equals(searchType)">
			                            AND notice_content LIKE '%' || #{searchKeyword} || '%'
			                        </when>
			                        <when test="'writer'.equals(searchType)">
			                            AND user_id LIKE '%' || #{searchKeyword} || '%'
			                        </when>
			                    </choose>
			                </when>
			                <otherwise>
			                    AND
			                        (
			                               notice_title LIKE '%' || #{searchKeyword} || '%'
			                            OR notice_content LIKE '%' || #{searchKeyword} || '%'
			                            OR user_id LIKE '%' || #{searchKeyword} || '%'
			                        )
			                </otherwise>
			            </choose>
			        </if>
			        </where>
                    ORDER BY notice_number DESC,notice_date DESC
                    )
             WHERE NUM BETWEEN #{paginationInfo.firstRecordIndex} AND #{paginationInfo.lastRecordIndex} AND notice_delete = 'N'
    </select>

    <select id="selectNoticeTotalCount" parameterType="NoticeDTO" resultType="int">
        SELECT
            COUNT(*)
        FROM
            s_notice
        WHERE
            notice_delete = 'N'
    </select>
    
    <!-- 메인화면 리스트 불러오기 -->
    <select id="selectProductList" resultType="ProductVO">
    	SELECT
    		product_number, product_name, product_price, product_thumbnail
    	FROM
    		s_product	
    </select>
   
    <!-- 메인화면 선물 불러오기 -->
    <select id="selectPresentList" resultType="ProductVO">
    	SELECT 
    		product_number, product_name, product_price,product_thumbnail 
    	FROM
    		s_product
    	WHERE
    		product_category = '선물'
    </select>
    <!-- 메인화면 간편 불러오기 -->
    <select id="selectSimpleList" resultType="ProductVO">
    	SELECT 
    		product_number, product_name, product_price,product_thumbnail 
    	FROM
    		s_product
    	WHERE
    		product_category = '간편'
    </select>
    <!-- 메인화면 제철 불러오기 -->
    <select id="selectSeasonList" resultType="ProductVO">
    	SELECT 
    		product_number, product_name, product_price,product_thumbnail 
    	FROM
    		s_product
    	WHERE
    		product_category = '제철'
    </select> 
    <!-- 메인화면 별난 불러오기 -->
    <select id="selectWeirdList" resultType="ProductVO">
    	SELECT 
    		product_number, product_name, product_price,product_thumbnail 
    	FROM
    		s_product
    	WHERE
    		product_category = '별난'
    </select>
    
    <!-- 상세화면 불러오기 -->
    <select id="selectProductData" parameterType="int" resultType="ProductVO">
    	SELECT
    		product_number, product_category, product_name, product_price, product_origin, product_delivery, product_stock ,product_info ,product_delete,product_thumbnail ,product_register_date ,product_register, product_update_date ,product_updater
    	FROM
    		s_product where product_number = #{productNumber}
    </select>
    <select id="selectDetailReviewList" parameterType="int" resultType="ReviewDTO">
         SELECT
          review_title
        , review_content
        , review_rate
        , user_id
        , product_name
        FROM
            s_review sr, s_order_detail sod,s_order so, s_product sp
        WHERE
            sr.order_detail_number= sod.order_detail_number and sod.order_number = so.order_number
            and sp.product_number=sod.product_number and sod.product_number=#{productNumber}
    </select>
    
    <!-- 장바구니 넣기 -->
    <insert id="item" parameterType="CartVO">
    	INSERT INTO s_cart VALUES (sequ_cart_number.nextval, #{productNumber}, #{userId}, #{cartCount}, SYSDATE) 
    </insert>

    <!-- 회원가입 -->
    <insert id="saveUser" parameterType="UserVO">
        INSERT INTO s_user VALUES(#{userId},#{userPw},#{userName},#{userEmail},#{userTel},#{userGrade},SYSDATE)
    </insert>
    
    <!-- id중복확인 -->
    <select id="idCheck" resultType="int">
        select count(*) from s_user where user_id = #{userid}
    </select>
    
    <!-- 로그인 -->
    <select id="userLogin" resultType="int"  parameterType="UserVO">
        select count(*) from s_user where user_id = #{userId} and user_pw = #{userPw}
    </select>
    
    <!-- 아이디찾기 -->
    <select id="findIdCheck" resultType="String" parameterType="UserVO">
        select user_id from s_user where user_name = #{userName} and user_email= #{userEmail}
    </select>
    
    <!-- 비밀번호찾기 (이메일확인) -->
    <select id="findUserByUserId" resultType="UserVO" parameterType="String">
        select user_id, user_pw, user_name, user_email, user_tel, user_grade, user_joindate from s_user where user_email=#{userEmail}
    </select>
    <!-- 비밀번호찾기 임시비밀번호 변경 -->
    <update id="updateUserPassword" parameterType="UserVO">
        update s_user set user_pw=#{userPw} where user_id=#{userId}
    </update>
    
    
    <!-- 회원정보 변경 비밀번호 확인 -->
    <select id="memberInfoPwCheck" resultType="int" parameterType="UserVO">
        select count(*) from s_user where user_id = #{userId} and user_pw = #{userPw}
    </select>
    <!-- 회원정보 보여주기 -->
    <select id="memberInfo" resultType="UserVO" parameterType="UserVO">
         select user_id, user_pw, user_name, user_email, user_tel, user_grade, user_joindate from s_user where user_id = #{userId} and user_pw = #{userPw}
    </select>
    <!-- 회원정보 변경 -->
    <update id="memberInfoUpdate" parameterType="UserVO">
        update s_user set user_pw=#{userPw}, user_name=#{userName}, user_email=#{userEmail}, user_tel=#{userTel} where user_id=#{userId}
    </update>
    <!-- 회원탈퇴 -->
    <delete id="memberQuit" parameterType="UserVO">
        delete from s_user where user_id = #{userId} and user_pw = #{userPw} 
    </delete>
    <!-- 주문목록 리스트 -->
    <select id="getOrderList" parameterType="String" resultType="OrderDetailDTO">
        SELECT order_detail_number, order_detail_count, order_detail_result ,TO_CHAR(order_date, 'YYYY-MM-DD') order_date, product_price, product_name
            FROM s_order_detail sor, s_order so, s_product sp
            WHERE sor.product_number = sp.product_number and sor.order_number = so.order_number
            AND so.user_id=#{user}
    </select>

    
    <update id="hitPlus" parameterType="long">
        UPDATE s_notice
        SET
            notice_hit = notice_hit+1
        WHERE
            notice_number = #{noticeNumber}    
    </update>
    
    <!-- 후기 -->
    <sql id="reviewColumns">
          review_number
        , order_detail_number
        , review_title
        , review_content
        , TO_CHAR(review_date, 'yyyy-MM-dd') review_date
        , review_rate
        , review_update_date
        , review_delete
    </sql>
    
    <insert id="insertReview" parameterType="ReviewDTO">
        INSERT INTO s_review (
            review_number
          , order_detail_number
            , review_title
            , review_content
            , review_date
            , review_rate
            , review_delete
        ) VALUES (
              sequ_review_number.nextval
            , #{orderDetailNumber}
            , #{reviewContent}
            , #{reviewContent}
            , sysdate
            , #{reviewRate}
            , 'N'
        )
    </insert>

    <select id="selectReviewDetail" parameterType="long" resultType="ReviewDTO">
        SELECT
            <include refid="reviewColumns" />
        FROM
            s_review
        WHERE
            review_delete = 'N'
        AND
            review_number = #{reviewNumber}
    </select>

    <update id="updateReview" parameterType="ReviewDTO">
        UPDATE s_review
        SET
              review_update_date = sysdate
            , review_title = #{reviewTitle}
            , review_content = #{reviewContent}
            , review_rate = #{reviewRate}
        WHERE
            review_number = #{reviewNumber}
    </update>

    <update id="deleteReview" parameterType="long">
        UPDATE s_review
        SET
              review_delete = 'Y'
        WHERE
            review_number = #{reviewNumber}
    </update>

    <!-- 후기 리스트 -->
    <select id="selectReviewList" parameterType="ReviewDTO" resultType="ReviewDTO">
         SELECT
          review_number
        , sr.order_detail_number order_detil_number
        , review_title
        , review_content
        , TO_CHAR(review_date, 'yyyy-MM-dd') review_date
        , review_rate
        , review_update_date
        , review_delete
        , user_id
        , product_name
        FROM
            s_review sr, s_order_detail sod,s_order so, s_product sp
        WHERE
            sr.order_detail_number= sod.order_detail_number and sod.order_number = so.order_number
            and sp.product_number=sod.product_number
        ORDER BY
            review_number DESC,
            review_date DESC
    </select>

    <select id="selectReviewTotalCount" parameterType="ReviewDTO" resultType="int">
        SELECT
            COUNT(*)
        FROM
            s_review
        WHERE
            review_delete = 'N'
    </select>
    
    
    <!-- 장바구니 -->
    <select id="cartlist" resultType="CartVO" parameterType="String">
        select cart_number,user_id,cart_count,cart_indate,product_name,product_thumbnail,product_price
        from s_cart sc ,s_product sp
        where user_id=#{userid} and sc.product_number=sp.product_number
    </select>
    <!-- 주문목록(관리자) -->
    <select id="plist" resultType="OrderDTO">
       select so.order_number,user_id,order_address1,order_address2,order_address3
        ,order_recipient_name,order_recipient_tel,order_date, ORDER_DETAIL_RESULT from s_order so, s_order_detail sod
        where so.ORDER_NUMBER = sod.ORDER_NUMBER
        <!-- select order_number,user_id,order_address1,order_address2,order_address3
        ,order_recipient_name,order_recipient_tel,order_date from s_order -->
    </select>
    
    
    <!-- 장바구니 -> 결제창 -->
    <select id="paymentlist" resultType="CartVO" parameterType="String">
        select cart_number,sc.product_number product_number,user_id,cart_count,cart_indate,product_name,product_thumbnail,product_price
        from s_cart sc ,s_product sp
        where sc.product_number=sp.product_number and cart_number=#{paymentlist}
    </select>
    
    <!-- 장바구니 선택 삭제 -->
    <delete id="deletecart" parameterType="int">
        DELETE FROM s_cart
        WHERE  cart_number=#{checkNum}
    </delete>
    
    <!-- 주문목록(관리자) 선택 삭제 -->
    <delete id="deleteOrderlist1" parameterType="int">
        DELETE FROM s_order_detail WHERE order_number=#{checkNum}
    </delete>
    <delete id="deleteOrderlist2" parameterType="int">
        DELETE FROM s_order_detail WHERE order_number=#{checkNum}
    </delete>
    
    <!-- 주문목록 입금 상태 변경 -->
    <update id="changeDeposit" parameterType="int">
        UPDATE s_order_detail SET ORDER_DETAIL_RESULT='배송완료' where order_number=#{checkNum}
    </update>
    
    <!-- 결제창 -> 메인 주문 테이블 삽입 -->
    <insert id="order" parameterType="OrderDTO">
	    insert into s_order values (sequ_order_number.nextval,#{userId},#{orderAddress1},#{orderAddress2},#{orderAddress3}
	    ,#{orderRecipientName},#{orderRecipientTel},sysdate)
    </insert>
    
    <!-- ordernumber 가져오기 -->
    <select id="ordernumber22" resultType="int">
        select max(order_number) order_number from s_order ORDER BY 'order_number'
    </select>
    
    <!-- 결제 -> 주문 상세 테이블 삽입 -->
    <insert id="orderDetailDTO" parameterType="OrderDetailDTO">
        insert into s_order_detail values (sequ_order_detail_number.nextval,#{productNumber},#{orderNumber},#{orderDetailCount},'입금대기')
    </insert>
    <!-- 주문번호 가져오려면 파라미터2개 써야하는데 2개는 가져올 수 가 없음 -->
    
    <!-- 결제 -> 결제 테이블 삽입 -->
    <insert id="paymentDTO" parameterType="PaymentDTO">
        insert into s_payment values(sequ_payment_number.nextval,#{orderNumber},#{paymentDelivery},sysdate,'무통장입금'
        ,#{paymentTotalPrice},#{paymentDiscountPrice},3000,#{paymentFinalPrice},#{paymentDepositName},'국민은행','200001-04-151211')
    </insert>
    
    
    <delete id="cartOrderDelete" parameterType="int">
        DELETE FROM s_cart
        WHERE  cart_number=#{cartNumber}
    </delete>
    
    <select id="getProductName" parameterType="int" resultType="String">
        select product_name from s_product sp,s_order_detail sod 
        where sod.order_detail_number=#{orderDetailNumber} 
        and sp.product_number=sod.product_number
    </select>
    
    <update id="updateresult" parameterType="Long" >
        UPDATE s_order_detail SET order_detail_result='후기완료'
        WHERE order_detail_number=#{result}
    </update>
    
    
    <select id="getreviewdto" parameterType="int" resultType="ReviewDTO">
        select review_number,order_detail_number,review_title,review_content,review_rate from s_review 
        where order_detail_number=#{orderDetailNumber}
    </select>
    
    <update id="reviewUpdate" parameterType="ReviewDTO">
        UPDATE s_review SET review_title=#{reviewContent}, review_content=#{reviewContent}, review_rate=#{reviewRate}
        WHERE order_detail_number=#{orderDetailNumber}
    </update>
    
    <delete id="reviewDelete"  parameterType="int" >
        delete from s_review where order_detail_number = #{orderDetailNumber}
    </delete>
    
    <update id="resultChange" parameterType="int" >
         UPDATE s_order_detail SET order_detail_result='배송완료'
        WHERE order_detail_number=#{orderDetailNumber}
    </update>
    
    <select id="getOrderNumber" parameterType="String" resultType="int">
        select order_number from s_order where user_id=#{userId}
    </select>
    
    
    <delete id="deleteCart2" parameterType="String">
        DELETE FROM s_cart
        WHERE user_id=#{userId}
    </delete>
    
    <select id="getOrderDetailNumber" parameterType="int" resultType="int">
        select order_detail_number from s_order_detail where order_number=#{orderNumber}
    </select>
    
    <delete id="deleteReview2" parameterType="int">
        DELETE FROM s_review
        WHERE order_detail_number=#{orderDetailNumber}
    </delete>
    
    <delete id="deleteOrderDetail" parameterType="int">
        DELETE FROM s_order_detail
        WHERE order_detail_number=#{orderDetailNumber}
    </delete>
    <delete id="deletePayment" parameterType="int">
        DELETE FROM s_payment
        WHERE order_number=#{orderNumber}
    </delete>
    <delete id="deleteOrder" parameterType="int">
        DELETE FROM s_order
        WHERE order_number=#{orderNumber}
    </delete>
    
    
    
    
    
    
</mapper>